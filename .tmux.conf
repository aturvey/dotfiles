# Sat Nov 12 22:10:31 2022 

# check for mac and load specific settings if detected
if-shell "uname | grep -q Darwin" "source-file ~/.tmux.mac.conf"

# rebind ^a as <prefix> (from the ^b default)
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# restore shell emacs bindings (but needs tmux <prefix>)
bind C-a send-keys 'C-a'  # move to beginning of line
bind C-e send-keys 'C-e'  # move to end of line
bind C-u send-keys 'C-u'  # delete to beginning of line
bind C-k send-keys 'C-k'  # delete to end of line
bind C-w send-keys 'C-w'  # delete previous word
bind C-y send-keys 'C-y'  # yank
bind C-l send-keys 'C-l'  # clear screen
bind C-x send-keys 'C-x'  # allow pass through of C+xx (toggle position between cursor an beginning of line

# use vim bindings for command mode
set -g status-keys vi

# timeouts for entering keystrokes after <prefix>, display messages, pane info
set -g repeat-time 700
set -g display-time 1000
set -g display-panes-time 500

# bind 'r' key to reload configuration file (note \; is needed to prevent display to nonexistent window at startup
bind r source-file /Users/aturvey/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# these are helpful pane management bindings
bind \\ split-window -h -c '#{pane_current_path}'
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# helpful navigation bindings
bind -n M-Left previous-window
bind -n M-Right next-window
bind -n M-Up choose-tree -Zw
bind -n M-Down choose-tree -Zw
bind -n C-Left select-pane -L
bind -n C-Right select-pane -R
bind -n C-Up select-pane -U
bind -n C-Down select-pane -D

# resize panes
bind -r h resize-pane -L
bind -r l resize-pane -R
bind -r k resize-pane -U
bind -r j resize-pane -D

# maps to navigate panes using tmux-navigator
# see chris toomey github vim-tmux-navigator plugin (and coresponding maps in .vimrc)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# usually just 'exit' or ^d will close a pane or window, but these can help
bind & kill-window
bind x kill-pane

# let the mouse be helpful
set -g mouse on

# dont rename windows automatically when the application changes
set -g allow-rename off

# may be needed to pass xterm keys through tmux (for certain vim keys)
setw -g xterm-keys on
set -g default-terminal "screen-256color"

# status line
# pane-border-status top
set -g base-index 1
set -g pane-base-index 1
set -g status-bg black
set -g status-fg colour84
set -g message-style 'fg=colour84 bg=black'
#set -g message-bg black
#set -g message-fg colour84
set -g status-left "#[fg=white]#[bg=black]|#[default] s#S #[fg=white]|#[default] w#I #[fg=white]|#[default] p#P #[fg=white]|#[default] "
set -g status-right "#{?client_prefix,#[reverse]C-a#[noreverse],} #[fg=white] #[default] Battery #{battery_percentage}"
# for redhat and ubuntu
#      set -ag status-right "#[fg=white] |#[default] #(ip addr show | grep 'inet .*noprefixroute.*' | awk '{print $2}')"
# for macbook
set -ag status-right "#[fg=white] |#[default] #(ifconfig -a | awk ' /(inet)(.*)broadcast/ {print $2}')"
# set -ag status-right "#[fg=white] |#[default] #(ifconfig | grep 'inet .*broadcast.*' | awk '{print $2}')"
set -ag status-right "#[fg=white] |#[default] %F #[fg=white]|#[default] %I:%M %p"
set -g  status-left-length 32
set -g  status-right-length 80

# for copy-paste in tmux using vim bindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
# bind-key P paste-buffer

# plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# tmux-battery plugin
set -g @plugin 'tmux-plugins/tmux-battery'

run -b '~/.tmux/plugins/tpm/tpm'
